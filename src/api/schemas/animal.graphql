scalar DateTime

type Animal {
  id: ID
  animal_name: String
  species: Species
  gender: GenderEnum
  birthdate: DateTime
  image: String
  thumbnail: String
  location: GeoJsonPoint
  owner: User
}

enum GenderEnum {
  Male
  Female
}

type GeoJsonPoint {
  type: PointEnum
  coordinates: [Float]
}

input GeoJsonPointInput {
  type: PointEnum!
  coordinates: [Float]!
}

input Coordinates {
  lat: Float!
  lng: Float!
}

enum PointEnum {
  Point
}

type Query {
  animals: [Animal]
  animalById(id: ID!): Animal
  animalsByArea(topRight: Coordinates!, bottomLeft: Coordinates!): [Animal]
}

type Mutation {
  addAnimal(
    animal_name: String!
    species: ID!
    gender: GenderEnum!
    birthdate: DateTime!
    image: String!
    thumbnail: String!
    location: GeoJsonPointInput!
  ): Animal
  updateAnimal(
    id: ID!
    animal_name: String
    gender: GenderEnum
    birthdate: DateTime
  ): Animal
  deleteAnimal(id: ID!): Animal
}
